{"version":3,"sources":["JS-Spec.js"],"names":[],"mappings":"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","file":"JS-Spec-compiled.js","sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2015 AceMood\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @file JS资源功能测试\n * @author AceMood\n */\n\n/* globals describe */\n/* globals it */\n\ndescribe('JS Resource', function() {\n\n  var expect = require('chai').expect;\n  var node_path = require('path');\n  var fs = require('fs');\n  var JS = require('./resource/JS');\n\n  var testData = node_path.join(__dirname, '..', '__test_data__', 'JS');\n\n  it('should have a js type', function() {\n    var js = new JS('a');\n    expect(js.type).to.equal('js');\n  });\n\n  it('should have a relative path', function() {\n    var js = new JS('a');\n    expect(js.path).to.deep.equal('a');\n  });\n\n  it('should have a null id', function() {\n    var js = new JS('a');\n    expect(js.id).to.be.null;\n  });\n\n  it('should can retrieve file content', function() {\n    var js = new JS(node_path.join(testData, 'empty.js'));\n    expect(js.getContent()).to.deep.equal('');\n    js = new JS(node_path.join(testData, 'plain.js'));\n    expect(js.getContent()).to.deep.equal('var str = \\'Hello World\\';');\n  });\n\n  it('should can set file content', function() {\n    var cssContent = 'html, body { border: 0 }';\n    var js = new JS(node_path.join(testData, 'empty.js'));\n    js.setContent(cssContent);\n    expect(js.getContent()).to.deep.equal(cssContent);\n    js.setContent('');\n    expect(js.getContent()).to.deep.equal('');\n  });\n\n  it('should flush content to destination', function(done) {\n    var js = new JS(node_path.join(testData, 'empty.js'));\n    var cssContent = 'var str = \\'Hello World\\';';\n    js.setContent(cssContent);\n\n    var distp = node_path.join(testData, 'dist.js');\n    js.flush(distp, function() {\n      var js = new JS(distp);\n      expect(js.getContent()).to.deep.equal(cssContent);\n      fs.unlinkSync(distp);\n      done();\n    });\n  });\n});\n"]}