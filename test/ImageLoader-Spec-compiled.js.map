{"version":3,"sources":["ImageLoader-Spec.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAS,aAAT,EAAwB,YAAW;;AAEjC,MAAI,SAAS,QAAQ,MAAR,EAAgB,MAAhB,CAFoB;AAGjC,MAAI,YAAY,QAAQ,MAAR,CAAZ,CAH6B;AAIjC,MAAI,cAAc,QAAQ,sBAAR,CAAd,CAJ6B;AAKjC,MAAI,cAAc,QAAQ,oBAAR,CAAd,CAL6B;AAMjC,MAAI,MAAM,QAAQ,gBAAR,CAAN,CAN6B;AAOjC,SAAO,OAAP,GAAiB,IAAI,IAAI,MAAJ,EAArB,CAPiC;;AASjC,MAAI,WAAW,UAAU,IAAV,CAAe,SAAf,EAA0B,IAA1B,EAAgC,eAAhC,EAAiD,OAAjD,CAAX,CAT6B;;AAWjC,KAAG,iCAAH,EAAsC,YAAW;AAC/C,QAAI,SAAS,IAAI,WAAJ,EAAT,CAD2C;AAE/C,WAAO,OAAO,SAAP,CAAiB,OAAjB,CAAP,EAAkC,EAAlC,CAAqC,EAArC,CAAwC,IAAxC,CAF+C;AAG/C,WAAO,OAAO,SAAP,CAAiB,OAAjB,CAAP,EAAkC,EAAlC,CAAqC,EAArC,CAAwC,IAAxC,CAH+C;AAI/C,WAAO,OAAO,SAAP,CAAiB,SAAjB,CAAP,EAAoC,EAApC,CAAuC,EAAvC,CAA0C,IAA1C,CAJ+C;AAK/C,WAAO,OAAO,SAAP,CAAiB,QAAjB,CAAP,EAAmC,EAAnC,CAAsC,EAAtC,CAAyC,KAAzC,CAL+C;GAAX,CAAtC,CAXiC;;AAmBjC,KAAG,qCAAH,EAA0C,UAAS,IAAT,EAAe;AACvD,QAAI,SAAS,IAAI,WAAJ,EAAT,CADmD;AAEvD,WAAO,YAAP,CACE,UAAU,IAAV,CAAe,QAAf,EAAyB,OAAzB,CADF,EAEE,IAFF,EAGE,UAAS,CAAT,EAAY;AACV,aAAO,EAAE,KAAF,CAAP,CAAgB,EAAhB,CAAmB,KAAnB,CAAyB,GAAzB,EADU;AAEV,aAAO,EAAE,MAAF,CAAP,CAAiB,EAAjB,CAAoB,KAApB,CAA0B,GAA1B,EAFU;;AAIV,aAJU;KAAZ,CAHF,CAFuD;GAAf,CAA1C,CAnBiC;;AAgCjC,KAAG,0CAAH,EAA+C,UAAS,IAAT,EAAe;AAC5D,QAAI,SAAS,IAAI,WAAJ,EAAT,CADwD;AAE5D,WAAO,YAAP,CACE,UAAU,IAAV,CAAe,QAAf,EAAyB,OAAzB,CADF,EAEE,IAFF,EAGE,UAAS,CAAT,EAAY;AACV,aAAO,EAAE,WAAF,CAAP,CAAsB,EAAtB,CAAyB,KAAzB,CAA+B,MAA/B,EADU;;AAGV,aAHU;KAAZ,CAHF,CAF4D;GAAf,CAA/C,CAhCiC;;AA4CjC,KAAG,iDAAH,EAAsD,UAAS,IAAT,EAAe;AACnE,QAAI,SAAS,IAAI,WAAJ,EAAT,CAD+D;AAEnE,QAAI,MAAM,IAAI,WAAJ,EAAN,CAF+D;;AAInE,WAAO,WAAP,CAAmB,GAAnB,EAAwB,EAAxB,EAA4B,UAAS,QAAT,EAAmB;AAC7C,aAAO,QAAP,EAAiB,EAAjB,CAAoB,EAApB,CAAuB,SAAvB,CAD6C;AAE7C,aAF6C;KAAnB,CAA5B,CAJmE;GAAf,CAAtD,CA5CiC;CAAX,CAAxB","file":"ImageLoader-Spec-compiled.js","sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2015 AceMood\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @file 图像加载器功能测试用例\n * @author AceMood\n */\n\n/* globals describe */\n/* globals it */\n\ndescribe('ImageLoader', function() {\n\n  var expect = require('chai').expect;\n  var node_path = require('path');\n  var ImageLoader = require('./loader/ImageLoader');\n  var ResourceMap = require('./core/ResourceMap');\n  var log = require('et-util-logger');\n  global.slogger = new log.Logger();\n\n  var testData = node_path.join(__dirname, '..', '__test_data__', 'Image');\n\n  it('should match package.json paths', function() {\n    var loader = new ImageLoader();\n    expect(loader.matchPath('x.png')).to.be.true;\n    expect(loader.matchPath('x.jpg')).to.be.true;\n    expect(loader.matchPath('a/x.gif')).to.be.true;\n    expect(loader.matchPath('a/1.js')).to.be.false;\n  });\n\n  it('should find the size of the picture', function(done) {\n    var loader = new ImageLoader();\n    loader.loadFromPath(\n      node_path.join(testData, 'a.jpg'),\n      null,\n      function(r) {\n        expect(r.width).to.equal(900);\n        expect(r.height).to.equal(596);\n\n        done();\n      });\n  });\n\n  it('should calculate network size when asked', function(done) {\n    var loader = new ImageLoader();\n    loader.loadFromPath(\n      node_path.join(testData, 'a.jpg'),\n      null,\n      function(r) {\n        expect(r.networkSize).to.equal(127381);\n\n        done();\n      });\n  });\n\n  it('should return form postProcess with 0 resources', function(done) {\n    var loader = new ImageLoader();\n    var map = new ResourceMap();\n\n    loader.postProcess(map, [], function(messages) {\n      expect(messages).to.be.undefined;\n      done();\n    });\n  });\n});"]}