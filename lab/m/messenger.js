// Generated by CoffeeScript 1.3.3
var Listener, Speaker,
  __slice = [].slice;

Listener = require('./listener');
Speaker = require('./speaker');

exports.createListener = function() {
  const node_path = require('path');
  const fs = require('fs');
  const spawn = require('child_process').spawn;

  const out = fs.openSync('./out.log', 'a');
  const err = fs.openSync('./out.log', 'a');

  var addr = node_path.join(__dirname, 'cacheServer.js');
  const child = spawn('node', [addr], {
    detached: true,
    stdio: [ 'ignore', out, err ]
  });

  child.unref();

  //var server = new Listener(8000);
  //server.on('cache', function(message, data){
  //  message.reply({'you':'got it'})
  //});
};

exports.createSpeaker = function() {
  var addresses;
  addresses = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  return new Speaker(addresses);
};
